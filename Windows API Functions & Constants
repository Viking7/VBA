1. '// User Desktop
  
    strSave = Environ("USERPROFILE") & "\Desktop\"

2. '//Windows API Function to get Username
    
    'API Declare
    Declare Function Get_User_Name Lib "advapi32.dll" Alias _
    "GetUserNameA" (ByVal lpBuffer As String, _
    nSize As Long) As Long
  
    'API Call
    Public Function GetUserName() As String
      Dim lpBuff As String * 25
      Get_User_Name lpBuff, 25
      GetUserName = Left(lpBuff, InStr(lpBuff, Chr(0)) - 1)
    End Function
    
3. '//Make an entry in the Registry Editor to add a global Dictionary Object (without needing to define it)
    Dim WshShell
    Set WshShell =CreateObject("WScript.Shell")
    WshShell.RegWrite "HKCU\Software\Mercury Interactive\QuickTest Professional\MicTest\ReservedObjects\GlobalDictionary\ProgID", "Scripting.Dictionary","REG_SZ"
    Set WshShell = Nothing
    
4. '// Make and entry in Registry Editor to change the value of Format to tab-delimited  
  
    Const HKEY_LOCAL_MACHINE = &H80000002
    strComputer = "."
    Set objReg=GetObject("winmgmts:\\" & strComputer & _
        "\root\default:StdRegProv")
    strKeyPath = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    strValueName = "Format"
    strValue = "TabDelimited"
    objReg.SetStringValue HKEY_LOCAL_MACHINE,strKeyPath,strValueName,strValue  

  'change Format back to CSVDelimited:
    Const HKEY_LOCAL_MACHINE = &H80000002
    strComputer = "."
    Set objReg=GetObject("winmgmts:\\" & strComputer & _
        "\root\default:StdRegProv")
    strKeyPath = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    strValueName = "Format"
    strValue = "CSVDelimited"
    objReg.SetStringValue _
      HKEY_LOCAL_MACHINE,strKeyPath,strValueName,strValue

4. '//API call to copy open files
    Private Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" _ 
          (ByVal lpExistingFileName As String, _ 
           ByVal lpNewFileName As String, _ 
           ByVal bFailIfExists As Long) As Long 
    ' Exposed function to copy open/closed files 
    Public Function CopyOpenFile(FromFile As String, ToFile As String) 
      Dim Results As Long 
      Dim LErr As Long 
      If Dir(FromFile) <> "" Then 
         Results = CopyFile(FromFile, ToFile, False) 
      Else 
         Results = -1 
      End If 
         CopyOpenFile = Results 
    End Function 

5. '//Find the path to ADOBE

    Private Declare Function FindExecutable Lib "shell32.dll" Alias "FindExecutableA" _
        (ByVal lpFile As String, _
         ByVal lpDirectory As String, _
         ByVal lpResult As String) As Long
    
    'and call this to find the applicable program name
    Public Function GetFileAssociation(ByVal sFilepath As String) As String
    Dim i               As Long
    Dim E               As String
        GetFileAssociation = "File not found!"
        If Dir(sFilepath) = vbNullString Or sFilepath = vbNullString Then Exit Function
        GetFileAssociation = "No association found!"
        E = String(260, Chr(0))
        i = FindExecutable(sFilepath, vbNullString, E)
        If i > 32 Then GetFileAssociation = Left(E, InStr(E, Chr(0)) - 1)
    End Function
