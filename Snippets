1. '//Show 'Format cells' dialog box:
  Application.CommandBars("Worksheet Menu Bar").Controls("Format").Controls("Cells...").Execute
  Application.Dialogs(xlDialogFormatNumber).Show
  
2. '//Show SavesAs dialogue box and name new file:
  a. bFileSaveAs = Application.Dialogs(xlDialogSaveAs).Show(, 6)
  Or,
  b. vFile = Application.GetSaveAsFilename(InitialFileName:=".xlsb", _
        FileFilter:="Excel Binary files (*.xlsb), *.xlsb, All files (*.*), *.*")
    
      '(xlExcel12 = 50,  Excel Binary Workbook in 2007-2010 with or without macro's, xlsb)
      If vFile <> False Then ThisWorkbook.SaveAs Filename:=vFile, FileFormat:=xlExcel12

3. '//Enable editing in ProtectedView Files
    Application.ActiveProtectedViewWindow.Edit
  
  a. 'Application.ProtectedViewWindows.Open Filename:="C:\Users\Zangetsu\Desktop\test\Source A.xls"
      'Workbooks("Source A.xls[Protected View]").Activate
      'With Excel.Application
      '    .ActiveWindow.ActivateNext
      'End With
      Application.ActiveProtectedViewWindow.Edit
    Or,
  b.  Windows("Book1").Activate
      ActiveWindow.ActivateNext
      Application.ActiveProtectedViewWindow.Edit

4. '// Offset from Userform Controls Linked Cell - ControlsMaster
     Sub ControlsMaster()
        Debug.Print Application.Caller
        x = ActiveSheet.Shapes(Application.Caller).ControlFormat.LinkedCell
        Range(x).Offset(0, 1).Value = Now()
      End Sub

5. MouseOver Function
    Public Function OnMouseOver()
      ActiveWorkbook.FollowHyperlink "filepath\filename.pdf"
    End Function
    'In the cell Use the following formula:
      =IFERROR(HYPERLINK(OnMouseOver(),"Text"),"TextError")


 6. '//Check if Sheetname exists in a Worksheet
    Function CheckSheetName(sheet_name As String) As Boolean
      Dim ws As Worksheet
      On Error Resume Next
      Set ws = Worksheets(sheet_name)
      If ws Is Nothing Then CheckSheetName = False Else CheckSheetName = True
    End Function

 7. '//Check if File is open via Freefile method
    Function IsFileOpen(filename As String)
       Dim filenum As Integer, errnum As Integer

       On Error Resume Next 
       filenum = FreeFile() 
       ' Attempt to open the file and lock it.
       Open filename For Input Lock Read As #filenum
       Close filenum          ' Close the file.
       errnum = Err           ' Save the error number that occurred.
       On Error GoTo 0        

       ' Check to see which error occurred.
       Select Case errnum

           ' No error occurred.
           ' File is NOT already open by another user.
           Case 0
               IsFileOpen = False

           ' Error number for "Permission Denied."
           ' File is already opened by another user.
           Case 70
               IsFileOpen = True

           ' Another error occurred.
           Case Else
               Error errnum
       End Select
    End Function
