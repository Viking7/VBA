1. '//Declaring as String vs Variant

    Sub Example()
        Dim ArrayOne() As String
        Dim ArrayTwo() As String
        Dim ArrayThree As Variant
        Dim i As Long

        ReDim ArrayOne(1 To Sheets.Count)
        ReDim ArrayTwo(1 To 2)

        For i = 1 To Sheets.Count
            ArrayOne(i) = Sheets(i).Name
        Next

        ArrayTwo(1) = "Sheet1"
        ArrayTwo(2) = "Sheet2"

        ArrayThree = Array("Sheet1", "Sheet3")
    End Sub

2. '//Create and pass an Array
    Sub SubRoutine()
      ProcessArray CreateArray
    End Sub
    
    Function ProcessArray(Arr As Variant) As Variant
    End Function
    
    Function CreateArray() As Variant
      Dim Array1(1 To 4) As Variant
      CreateArray = Array1
    End Function

3. '// Check string within an Array
    Function IsInArray(stringToBeFound As String, arr As Variant) As Boolean
      IsInArray = (UBound(Filter(arr, stringToBeFound)) > -1)
    End Function
 
4. '//ArrayList Objects
    Sub f()

    Dim myArrayList As Object
    Dim i As Long

    Set myArrayList = ArrayList

    'Add ArrayList child objects to the ArrayList object:
    myArrayList.Add ArrayList
    i = myArrayList.Count - 1
    'Add items to the child ArrayList:
    myArrayList.Item(i).Add "A"
    myArrayList.Item(i).Add "B"
    myArrayList.Item(i).Add "C"

    'Add some more:
    myArrayList.Add ArrayList
    i = myArrayList.Count - 1
    myArrayList.Item(i).Add 1
    myArrayList.Item(i).Add 2
    myArrayList.Item(i).Add 3

    'Dump this in to a VBA Array, if needed:
    Dim myArray
    myArray = myArrayList.ToArray()

    End Sub
    Function ArrayList()
        Set ArrayList = CreateObject("System.Collections.ArrayList")
    End Function

